let recordedAudioBuffer=null;let analyzedData=null;let deferredPrompt=null;document.addEventListener('DOMContentLoaded',()=>{const home=document.getElementById("screen-home"),recordScreen=document.getElementById("screen-record"),resultsScreen=document.getElementById("screen-results"),liveCanvas=document.getElementById("waveform-live"),resultCanvas=document.getElementById("waveform-result"),timeList=document.getElementById("time-values"),classificationDiv=document.getElementById("classification"),installButton=document.getElementById("btn-install"),micWarning=document.getElementById("mic-warning");window.addEventListener("beforeinstallprompt",e=>{e.preventDefault();deferredPrompt=e;installButton.classList.remove("hidden")}),installButton.addEventListener("click",async()=>{deferredPrompt&&(deferredPrompt.prompt(),await deferredPrompt.userChoice,outcome=>"accepted"===outcome&&console.log("Usuario instaló la PWA"),installButton.classList.add("hidden"),deferredPrompt=null)}),(window.matchMedia("(display-mode: standalone)").matches||window.navigator.standalone)&&(installButton.classList.add("hidden")),document.getElementById("btn-record").onclick=()=>{micWarning.classList.remove("hidden");setTimeout(()=>micWarning.classList.add("hidden"),4000);startRecording()},document.getElementById("btn-results-back").onclick=()=>{resultsScreen.classList.add("hidden"),home.classList.remove("hidden")},document.getElementById("btn-export-pdf").onclick=exportPDF;async function startRecording(){home.classList.add("hidden"),recordScreen.classList.remove("hidden");try{const stream=await navigator.mediaDevices.getUserMedia({audio:!0}),audioContext=new(AudioContext||webkitAudioContext),source=audioContext.createMediaStreamSource(stream),analyser=audioContext.createAnalyser();analyser.fftSize=2048,source.connect(analyser);const canvasCtx=liveCanvas.getContext("2d"),bufferLength=analyser.frequencyBinCount,dataArray=new Uint8Array(bufferLength),chunks=[],mediaRecorder=new MediaRecorder(stream);mediaRecorder.ondataavailable=e=>chunks.push(e.data),mediaRecorder.start();const duration=12e3,startTime=Date.now();!function draw(){Date.now()-startTime>duration?(mediaRecorder.stop(),stream.getTracks().forEach(track=>track.stop())):(requestAnimationFrame(draw),analyser.getByteTimeDomainData(dataArray),canvasCtx.fillStyle="rgba(0,0,0,0.5)",canvasCtx.fillRect(0,0,liveCanvas.width,liveCanvas.height),canvasCtx.lineWidth=1.5,canvasCtx.strokeStyle="#fff",canvasCtx.beginPath(),function(){const sliceWidth=liveCanvas.width/bufferLength;let x=0;for(let i=0;i<bufferLength;i++){const v=dataArray[i]/128,y=v*liveCanvas.height/2;i?canvasCtx.lineTo(x,y):canvasCtx.moveTo(x,y),x+=sliceWidth}canvasCtx.lineTo(liveCanvas.width,liveCanvas.height/2),canvasCtx.stroke()}())}(),mediaRecorder.onstop=async()=>{const blob=new Blob(chunks,{type:"audio/wav"}),arrayBuffer=await blob.arrayBuffer();recordedAudioBuffer=await audioContext.decodeAudioData(arrayBuffer);analyzeAudio();showResults()})}catch(e){alert("Error: no se pudo acceder al micrófono.\n\nAsegúrate de:\n1. Haber permitido el micrófono\n2. Tener un micrófono conectado"),recordScreen.classList.add("hidden"),home.classList.remove("hidden")}}function analyzeAudio(){if(!recordedAudioBuffer)return;const sampleRate=recordedAudioBuffer.sampleRate,channelData=recordedAudioBuffer.getChannelData(0),startIdx=Math.floor(2*sampleRate),endIdx=Math.floor(10*sampleRate),segment=channelData.slice(startIdx,endIdx),normalized=segment.map(v=>Math.max(0,Math.min(255,Math.floor((v*128)+127)))),peaks=[],intervals=[];let i=0;for(;i<normalized.length;)normalized[i]>130?(peaks.push(i),function(){for(;i+1<normalized.length&&normalized[i+1]>150;)i++}()):i++;for(let j=peaks.length-1;j>0;j--){const diff=peaks[j]-peaks[j-1];diff>1e3&&intervals.push(diff/sampleRate)}let diagnosis="Sin datos";if(intervals.length>0){const avgInterval=intervals.reduce((a,b)=>a+b,0)/intervals.length,bpm=60/avgInterval;diagnosis=bpm>=60&&bpm<=100?`Normal (FC: ${bpm.toFixed(1)} bpm)`:bpm>100?`Taquicardia (FC: ${bpm.toFixed(1)} bpm)`:bpm<60?`Bradicardia (FC: ${bpm.toFixed(1)} bpm)`:"Sin datos"}analyzedData={segment:normalized,intervals,diagnosis};const ctx=resultCanvas.getContext("2d");ctx.fillStyle="rgba(0,0,0,0.5)",ctx.fillRect(0,0,resultCanvas.width,resultCanvas.height),ctx.beginPath(),ctx.strokeStyle="#fff",ctx.lineWidth=1;const step=normalized.length/resultCanvas.width;for(let x=0;x<resultCanvas.width;x++){const idx=Math.floor(x*step),y=(1-normalized[idx]/255)*resultCanvas.height;x?ctx.lineTo(x,y):ctx.moveTo(x,y)}ctx.stroke()}function showResults(){if(!analyzedData)return;timeList.innerHTML="",analyzedData.intervals.forEach(t=>{const li=document.createElement("li");li.textContent=t.toFixed(4),timeList.appendChild(li)}),classificationDiv.innerHTML=`<h3>Diagnóstico:</h3><p>${analyzedData.diagnosis}</p>`,recordScreen.classList.add("hidden"),home.classList.add("hidden"),resultsScreen.classList.remove("hidden")}function exportPDF(){if(!analyzedData)return;const{jsPDF}=window.jspdf,doc=new jsPDF;doc.setFontSize(18),doc.text("Estetoscopio Electrónico - Resultados",15,20),doc.setFontSize(12),doc.text(`Diagnóstico: ${analyzedData.diagnosis}`,15,30),doc.text("Tiempos entre latidos (s):",15,40);let y=45;analyzedData.intervals.forEach(t=>{doc.text(t.toFixed(4),20,y),y+=5,y>280&&(doc.addPage(),y=20)});const imgData=resultCanvas.toDataURL("image/png");doc.addPage(),doc.text("Waveform del segmento analizado:",15,20),doc.addImage(imgData,"PNG",15,30,180,120),doc.save("estetoscopio_resultados.pdf")}});